# do DUT_run_msim_rtl_vhdl.do 
# if {[file exists rtl_work]} {
# 	vdel -lib rtl_work -all
# }
# vlib rtl_work
# vmap work rtl_work
# Copying /opt/modelsim_ase/linuxaloem/../modelsim.ini to modelsim.ini
# Modifying modelsim.ini
# ** Warning: Copied /opt/modelsim_ase/linuxaloem/../modelsim.ini to modelsim.ini.
#          Updated modelsim.ini.
# 
# vcom -93 -work work {/home/student/Desktop/Quartus/Quartus_work/priority_work/DUT.vhd}
# Model Technology ModelSim ALTERA vcom 10.1d Compiler 2012.11 Nov  2 2012
# -- Loading package STANDARD
# -- Compiling entity DUT
# -- Compiling architecture DutWrap of DUT
# vcom -93 -work work {/home/student/Desktop/Quartus/Quartus_work/priority_work/PriorityEncoder.vhd}
# Model Technology ModelSim ALTERA vcom 10.1d Compiler 2012.11 Nov  2 2012
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Loading package std_logic_1164
# -- Compiling entity PriorityEncoder
# -- Compiling architecture Formulas of PriorityEncoder
# 
# vcom -93 -work work {/home/student/Desktop/Quartus/Quartus_work/priority_work/Testbench.vhd}
# Model Technology ModelSim ALTERA vcom 10.1d Compiler 2012.11 Nov  2 2012
# -- Loading package STANDARD
# -- Loading package TEXTIO
# -- Compiling entity Testbench
# -- Compiling architecture Behave of Testbench
# 
# vsim -t 1ps -L altera -L lpm -L sgate -L altera_mf -L altera_lnsim -L maxv -L rtl_work -L work -voptargs="+acc"  Testbench
# vsim -L altera -L lpm -L sgate -L altera_mf -L altera_lnsim -L maxv -L rtl_work -L work -voptargs=\"+acc\" -t 1ps Testbench 
# Loading std.standard
# Loading std.textio(body)
# Loading work.testbench(behave)
# Loading work.dut(dutwrap)
# Loading ieee.std_logic_1164(body)
# Loading work.priorityencoder(formulas)
# 
# add wave *
# view structure
# .main_pane.structure.interior.cs.body.struct
# view signals
# .main_pane.objects.interior.cs.body.tree
# run -all
# ** Note: SUCCESS, all tests passed.
#    Time: 75 ns  Iteration: 0  Instance: /testbench
